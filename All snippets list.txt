All snippets list
https://medium.com/better-programming/127-helpful-javascript-snippets-you-can-learn-in-30-seconds-or-less-part-1-of-6-bc2bc890dfe5

Part 1

. all
This snippet returns true if the predicate function returns true for all elements in a collection and false otherwise. You can omit the second argument fn if you want to use Boolean as a default value.

2. allEqual
This snippet checks whether all elements of the array are equal.

3. approximatelyEqual
This snippet checks whether two numbers are approximately equal to each other, with a small difference.

4. arrayToCSV
This snippet converts the elements to strings with comma-separated values.

5. arrayToHtmlList
This snippet converts the elements of an array into <li> tags and appends them to the list of the given ID.

6. attempt
This snippet executes a function, returning either the result or the caught error object.

7. average
This snippet returns the average of two or more numerical values.

8. averageBy
This snippet returns the average of an array after initially doing the mapping of each element to a value using a given function.

9. bifurcate
This snippet splits values into two groups and then puts a truthy element of filter in the first group, and in the second group otherwise.
You can use Array.prototype.reduce() and Array.prototype.push() to add elements to groups based on filter.

10. bifurcateBy
This snippet splits values into two groups, based on a predicate function. If the predicate function returns a truthy value, the element will be placed in the first group. Otherwise, it will be placed in the second group.
You can use Array.prototype.reduce() and Array.prototype.push() to add elements to groups, based on the value returned by fn for each element.

11. bottomVisible
This snippet checks whether the bottom of a page is visible.

12. byteSize
This snippet returns the length of a string in bytes.

13. capitalize
This snippet capitalizes the first letter of a string.

14. capitalizeEveryWord
This snippet capitalizes the first letter of every word in a given string.

15. castArray
This snippet converts a non-array value into array.

16. compact
This snippet removes false values from an array.

17. countOccurrences
This snippet counts the occurrences of a value in an array.

18. Create Directory
This snippet uses existsSync() to check whether a directory exists and then mkdirSync() to create it if it doesn’t.

19. currentURL
This snippet returns the current URL.

20. dayOfYear
This snippet gets the day of the year from a Date object.

21. decapitalize
This snippet turns the first letter of a string into lowercase.

22. deepFlatten
This snippet flattens an array recursively.


Part 2

23. default
This snippet assigns default values for all properties in an object that are undefined.

24. defer
This snippet delays the execution of a function until the current call stack is cleared.

25. degreesToRads
This code snippet can be used to convert a value from degrees to radians.

26. difference
This snippet finds the difference between two arrays.

27. differenceBy
This method returns the difference between two arrays, after applying a given function to each element of both lists.

28. differenceWith
This snippet removes the values for which the comparator function returns false.

29. digitize
This snippet gets a number as input and returns an array of its digits.

30. distance
This snippet returns the distance between two points by calculating the Euclidean distance.

31. Drop Elements
This snippet returns a new array with n elements removed from the left.

32. dropRight
This snippet returns a new array with n elements removed from the right.

33. dropRightWhile
This snippet removes elements from the right side of an array until the passed function returns true.

34. dropWhile
This snippet removes elements from an array until the passed function returns true.

35. elementContains
This snippet checks whether the parent element contains the child.

36. Filter Duplicate Elements
This snippet removes duplicate values in an array.

37. findKey
This snippet returns the first key that satisfies a given function.

38. findLast
This snippet returns the last element for which a given function returns a truthy value.

39. flatten
This snippet flattens an array up to a specified depth using recursion.

40. forEachRight
This snippet executes a function for each element of an array starting from the array’s last element.

41. forOwn
This snippet iterates on each property of an object and iterates a callback for each one respectively.

42. functionName
This snippet prints the name of a function into the console.


Part 3

43. Get Time From Date
This snippet can be used to get the time from a Date object as a string.

44. Get Days Between Dates
This snippet can be used to find the difference in days between two dates.

45. getStyle
This snippet can be used to get the value of a CSS rule for a particular element.

46. getType
This snippet can be used to get the type of a value.

47. hasClass
This snippet checks whether an element has a particular class.

48. head
This snippet returns the head of a list.

49. hide
This snippet can be used to hide all elements specified.

50. httpsRedirect
This snippet can be used to redirect from HTTP to HTTPS in a particular domain.

51. indexOfAll
This snippet can be used to get all indexes of a value in an array, which returns an empty array, in case this value is not included in it.

52. initial
This snippet returns all elements of an array except the last one.

53. insertAfter
This snippet can be used to insert an HTML string after the end of a particular element.

54. insertBefore
This snippet can be used to insert an HTML string before a particular element.

55. intersection
This snippet can be used to get an array with elements that are included in two other arrays.

56. intersectionBy
This snippet can be used to return a list of elements that exist in both arrays, after a particular function has been executed to each element of both arrays.

57. intersectionWith
This snippet can be used to return a list of elements that exist in both arrays by using a comparator function.

58. is
This snippet can be used to check if a value is of a particular type.

59. isAfterDate
This snippet can be used to check whether a date is after another date.

60. isAnagram
This snippet can be used to check whether a particular string is an anagram with another string.

61. isArrayLike
This snippet can be used to check if a provided argument is iterable like an array.

62. isBeforeDate
This snippet can be used to check whether a date is before another date.

63. isBoolean
This snippet can be used to check whether an argument is a boolean.


Part 4

64. isBrowser
This snippet can be used to determine whether the current runtime environment is a browser. This is helpful for avoiding errors when running front-end modules on the server (Node).

65. isBrowserTabFocused
This snippet can be used to determine whether the browser tab is focused.

66. isLowerCase
This snippet can be used to determine whether a string is lower case.

67. isNil
This snippet can be used to check whether a value is null or undefined.

68. isNull
This snippet can be used to check whether a value is null.

69. isNumber
This snippet can be used to check whether a provided value is a number.

70. isObject
This snippet can be used to check whether a provided value is an object. It uses the Object constructor to create an object wrapper for the given value.
If it is already an object, then an object type that corresponds to the given value will be returned. Otherwise, a new object will be returned.

71. isObjectLike
This snippet can be used to check if a value is not null and that its typeof is “object”.

72. isPlainObject
This snippet checks whether a value is an object created by the Object constructor.

73. isPromiseLike
This snippet checks whether an object looks like a Promise.

74. isSameDate
This snippet can be used to check whether two dates are equal.

75. isString
This snippet can be used to check whether an argument is a string.

76. isSymbol
This snippet can be used to check whether an argument is a symbol.

77. isUndefined
This snippet can be used to check whether a value is undefined.

78. isUpperCase
This snippet can be used to check whether a string is upper case.

79. isValidJSON
This snippet can be used to check whether a string is a valid JSON.

80. last
This snippet returns the last element of an array.

81. matches
This snippet compares two objects to determine if the first one contains the same property values as the second one.

82. maxDate
This snippet can be used to get the latest date.

83. maxN
This snippet returns the n largest elements from a list. If n is greater than or equal to the list’s length, then it will return the original list (sorted in descending order).

84. minDate
This snippet can be used to get the earliest date.


Part 5

85. minN
This snippet returns the n smallest elements from a list. If n is greater than or equal to the list’s length, then it will return the original list (sorted in ascending order).

86. negate
This snippet can be used to apply the not operator (!) to a predicate function with its arguments.

87. nodeListToArray
This snippet can be used to convert a nodeList to an array.

88. pad
This snippet can be used to pad a string on both sides with a specified character if it is shorter than the specified length.

89. radsToDegrees
This snippet can be used to convert an angle from radians to degrees.

90. Random Hexadecimal Color Code
This snippet can be used to generate a random hexadecimal color code.

91. randomIntArrayInRange
This snippet can be used to generate an array with n random integers in a specified range.

92. randomIntegerInRange
This snippet can be used to generate a random integer in a specified range.

93. randomNumberInRange
This snippet can be used to return a random number in a specified range.

94. readFileLines
This snippet can be used to read a file by getting an array of lines from a file.

95. Redirect to a URL
This snippet can be used to do a redirect to a specified URL.

96. reverse
This snippet can be used to reverse a string.

97. round
This snippet can be used to round a number to a specified number of digits.

98. runPromisesInSeries
This snippet can be used to run an array of promises in series.

99. sample
This snippet can be used to get a random number from an array.

100. sampleSize
This snippet can be used to get n random elements from unique positions from an array up to the size of the array. Elements in the array are shuffled using the Fisher-Yates algorithm.

101. scrollToTop
This snippet can be used to do a smooth scroll to the top of the current page.

102. serializeCookie
This snippet can be used to serialize a cookie name-value pair into a Set-Cookie header string.

103. setStyle
This snippet can be used to set the value of a CSS rule for a particular element.

104. shallowClone
This snippet can be used to create a shallow clone of an object.

105. show
This snippet can be used to show all the elements specified.

106. shuffle
This snippet can be used to order the elements of an array randomly using the Fisher-Yates algorithm.


Part 6

107. similarity
This snippet can be used to return an array of elements that appear in two arrays.

108. sleep
This snippet can be used to delay the execution of an asynchronous function by putting it into sleep.

109. smoothScroll
This snippet can be used to smoothly scroll the element on which it is called into the visible area of the browser window.

110. sortCharactersInString
This snippet can be used to alphabetically sort the characters in a string.

111. splitLines
This snippet can be used to split a multi-line string into an array of lines.

112. stripHTMLTags
This snippet can be used to remove HTML/XML tags from a string.

113. sum
This snippet can be used to find the sum of two or more numbers or arrays.

114. tail
This snippet can be used to get an array with all the elements of an array except for the first one. If the array has only one element, then that an array with that element will be returned instead.

115. take
This snippet can be used to get an array with n elements removed from the beginning.

116. takeRight
This snippet can be used to get an array with n elements removed from the end.

117. timeTaken
This snippet can be used to find out the time it takes to execute a function.

118. times
This snippet can be used to iterate over a callback n times.

119. toCurrency
This snippet can be used to format a number like a currency.

120. toDecimalMark
This snippet uses the toLocaleString() function to convert float-point arithmetic to the decimal mark form by using a number to make a comma-separated string.

121. toggleClass
This snippet can be used to toggle a class for an element.

122. tomorrow
This snippet can be used to get a string representation of tomorrow’s date.

123. unfold
This snippet can be used to build an array using an iterator function and an initial seed value.

124. union
This snippet can be used to find the union of two arrays, resulting in an array that has elements that come from both arrays but that do not repeat.

125. uniqueElements
This snippet uses ES6 Set and the …rest operator to get every element only once.

126. validateNumber
This snippet can be used to check whether a value is a number.

127. words
This snippet converts a string into an array of words.